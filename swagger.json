{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.1",
    "title": "GooseTrack",
    "description": "Documentation for GooseTrack project",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [
    { "url": "https://goose-track-ity9.onrender.com" },
    { "url": "http://localhost:3001" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Tasks",
      "description": "Tasks endpoints"
    },
    {
      "name": "Reviews",
      "description": "Reviews endpoints"
    },
    { "name": "Statistics", "description": "Statistics endpointst" }
  ],

  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Signup body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupResponse200"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupSigninUpdateResponse400"
                }
              }
            }
          },
          "409": {
            "description": "Email already in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupResponse409"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/verify": {
      "post": {
        "tags": ["Auth"],
        "summary": "Resend verification email",
        "parameters": [],
        "requestBody": {
          "description": "Verify body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendVerificationEmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResendVerificationEmailResponse200"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResendVerificationEmailResponse400"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/verify/{verificationToken}": {
      "get": {
        "tags": ["Auth"],
        "summary": "Verificate user's email",
        "parameters": [
          {
            "in": "path",
            "name": "verificationToken",
            "required": true,
            "type": "string",
            "description": "Verification token"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationResponse200"
                }
              }
            }
          },
          "404": {
            "description": "invalid verification token or email already validated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationResponse404"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/signin": {
      "post": {
        "tags": ["Auth"],
        "summary": "User signin",
        "parameters": [],
        "requestBody": {
          "description": "Signin body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SigninRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SigninResponse200"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupSigninUpdateResponse400"
                }
              }
            }
          },
          "401": {
            "description": "Wrong email or password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SigninResponse401"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized401"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current user",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCurrentResponce200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized401"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/updateUser": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Update user's data",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update user's data",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse200"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupSigninUpdateResponse400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized401"
                }
              }
            }
          }
        }
      }
    },
    "/api/tasks": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get all tasks",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTasks200"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized401"
                }
              }
            }
          }
        }
      },

      "post": {
        "tags": ["Tasks"],
        "summary": "Add new task",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Signup body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddTaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddTaskResponce200"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddTaskResponce400"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized401"
                }
              }
            }
          }
        }
      }
    },
    "/api/tasks/day": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get tasks for day",
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "required": true,
            "type": "string",
            "description": "Date in format YYYY-MM-DD with leading 0",
            "example": "2023-07-01"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTasks200"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized401"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid date parameter)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTaskForDay400"
                }
              }
            }
          }
        }
      }
    },
    "/api/tasks/month": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get tasks for month",
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "required": true,
            "type": "string",
            "description": "Date in format YYYY-MM-DD or YYYY-MM with leading 0",
            "example": "2023-07-01"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTasks200"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized401"
                }
              }
            }
          }
        }
      }
    },
    "/api/tasks/{taskId}": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get task by id",
        "parameters": [
          {
            "in": "path",
            "name": "taskId",
            "required": true,
            "type": "string",
            "description": "Task id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTaskbyId200"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskbyId400"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized401"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound404"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Tasks"],
        "summary": "Delete task by id",
        "parameters": [
          {
            "in": "path",
            "name": "taskId",
            "required": true,
            "type": "string",
            "description": "Task id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTaskbyId200"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskbyId400"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized401"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound404"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Tasks"],
        "summary": "Update by id",
        "parameters": [
          {
            "in": "path",
            "name": "taskId",
            "required": true,
            "type": "string",
            "description": "Task id"
          }
        ],
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "description": "Signup body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddTaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateTaskbyId200"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskbyId400"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized401"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound404"
                }
              }
            }
          }
        }
      }
    },
    "/api/reviews": {
      "get": {
        "tags": ["Reviews"],
        "summary": "Get all reviews",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetReviews200"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reviews404"
                }
              }
            }
          }
        }
      }
    },
    "/api/reviews/own": {
      "get": {
        "tags": ["Reviews"],
        "summary": "Get own review",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddUpdateReview200"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized401"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reviews404"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Reviews"],
        "summary": "Add own review",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Signup body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddUpdateReviewRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddUpdateReview200"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized401"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddUpdateReview400"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reviews404"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddReview409"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Reviews"],
        "summary": "Update own review",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddUpdateReviewRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddUpdateReview200"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized401"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddUpdateReview400"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reviews404"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Reviews"],
        "summary": "Delete own review",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteReview200"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized401"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reviews404"
                }
              }
            }
          }
        }
      }
    },
    "/api/statistics": {
      "get": {
        "tags": ["Statistics"],
        "summary": "Get statistics for current user",
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "required": true,
            "type": "string",
            "description": "Date in format YYYY-MM-DD with leading 0",
            "example": "2023-07-01"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Statistics200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized401"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Statistics400"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "defaultExpanded": true,
    "schemas": {
      "SignupRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Brendan Eich "
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "brendan.eich@mail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "SignupResponse200": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "User created successfully"
          },
          "newUser": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "user's name"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "password": {
                "type": "string",
                "description": "User's hashed password"
              },
              "token": {
                "type": "string",
                "description": "User's token. Default value is empty string."
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar URL. Generated by default."
              },
              "verify": {
                "type": "boolean",
                "description": "Verifying flag. Change to true after email verification",
                "example": false
              },
              "verificationToken": {
                "type": "string",
                "description": "Verification token"
              },
              "birthday": {
                "type": "string",
                "description": "User's date of birth. Default value is empty string."
              },
              "skype": {
                "type": "string",
                "description": "User's skype number. Default value is empty string."
              },
              "phone": {
                "type": "string",
                "description": "User's phone number. Default value is empty string."
              },
              "_id": {
                "type": "string",
                "description": "User's id in database."
              },
              "createdAt": {
                "type": "string",
                "description": "Date of creating new user"
              },
              "updatedAt": {
                "type": "string",
                "description": "Date of updating user"
              }
            }
          }
        },
        "example": {
          "message": "User created successfully",
          "newUser": {
            "name": "User 1",
            "email": "samoko1175@devswp.com",
            "password": "$2b$10$BvjmeZe6r5zZf8VheH1ViuDiSWqsCFF3Uvyjj4r4N5g5UBbNrmo72",
            "token": "",
            "avatarURL": "https://avataaars.io/?accessoriesType=Wayfa...",
            "verify": false,
            "verificationToken": "81ddba7a-1b9b-4b9e-947f-007aab999f16",
            "birthday": "",
            "skype": "",
            "phone": "",
            "_id": "649d6d000a7165fe436e3980",
            "createdAt": "2023-06-29T11:37:36.443Z",
            "updatedAt": "2023-06-29T11:37:36.443Z"
          }
        }
      },
      "SignupSigninUpdateResponse400": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Name field must be a string"
          }
        },
        "example": [
          {
            "message": "Email field may contain only latin letters, numbers, signs (\"_\", \".\", \"-\"). Must contain @ and domain."
          },
          {
            "message": "Password field must be a string"
          },
          {
            "message": "Missing required password field"
          }
        ]
      },
      "SignupResponse409": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Email already in use"
          }
        },
        "example": {
          "message": "Email already in use"
        }
      },
      "ResendVerificationEmailRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "brendan.eich@mail.com"
          }
        }
      },
      "ResendVerificationEmailResponse200": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response",
            "example": "Verification email sent"
          }
        }
      },
      "ResendVerificationEmailResponse400": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response",
            "example": "Verification has already been passed"
          }
        },
        "example": [
          { "message": "Verification has already been passed" },
          {
            "message": "missing required field email"
          }
        ]
      },
      "VerificationResponse200": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response",
            "example": "Verification successful"
          }
        },
        "example": [
          {
            "message": "Verification successful"
          }
        ]
      },
      "VerificationResponse404": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response",
            "example": "User not found"
          }
        },
        "example": [
          {
            "message": "User not found"
          }
        ]
      },
      "SigninRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "brendan.eich@mail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "SigninResponse200": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Success Signed In"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "user's name"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "password": {
                "type": "string",
                "description": "User's hashed password"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar URL"
              },
              "verify": {
                "type": "boolean",
                "description": "Verifying flag. Change to true after email verification",
                "example": true
              },
              "verificationToken": {
                "type": "string",
                "description": "Verification token"
              },
              "birthday": {
                "type": "string",
                "description": "User's date of birth. Default value is empty string."
              },
              "skype": {
                "type": "string",
                "description": "User's skype number. Default value is empty string."
              },
              "phone": {
                "type": "string",
                "description": "User's phone number. Default value is empty string."
              },
              "_id": {
                "type": "string",
                "description": "User's id in database."
              },
              "createdAt": {
                "type": "string",
                "description": "Date of creating new user"
              },
              "updatedAt": {
                "type": "string",
                "description": "Date of updating user"
              }
            }
          },
          "token": {
            "type": "string",
            "description": "User's token"
          }
        },
        "example": {
          "message": "Success Signed In",
          "user": {
            "_id": "649edb80aa1270509e5ce7e9",
            "name": "Oleksandr",
            "email": "todafa8464@dronetz.com",
            "password": "$2b$10$onba/VGbS1lSoojpQODI9uI0XHjqWAAW4OAQXtVexK0V5u8tnJkjO",
            "avatarURL": "https://avataaars.io/?accessoriesType=Blank&avatarStyle ...",
            "verify": true,
            "verificationToken": null,
            "birthday": "",
            "skype": "",
            "phone": "",
            "createdAt": "2023-06-30T13:41:20.176Z",
            "updatedAt": "2023-06-30T13:41:38.678Z"
          },
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OWVkYjgwYWExMjcwNTA5ZTVjZTdlOSIsImlhdCI6MTY4ODEzMjUzNSwiZXhwIjoxNjg4MjE4OTM1fQ.iel1IUceEFWfizYVXE5Xfb0F4cVcDvdq0cW83KXlBIQ"
        }
      },
      "SigninResponse401": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message"
          }
        },
        "example": {
          "message": "Email or Password wrong"
        }
      },
      "LogoutResponse200": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message"
          }
        },
        "example": {
          "message": "Logout success"
        }
      },
      "Unauthorized401": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message"
          }
        },
        "example": {
          "message": "Unauthorized"
        }
      },
      "GetCurrentResponce200": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "user's name"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "password": {
                "type": "string",
                "description": "User's hashed password"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar URL"
              },
              "verify": {
                "type": "boolean",
                "description": "Verifying flag. Change to true after email verification",
                "example": true
              },
              "verificationToken": {
                "type": "string",
                "description": "Verification token"
              },
              "birthday": {
                "type": "string",
                "description": "User's date of birth. Default value is empty string."
              },
              "skype": {
                "type": "string",
                "description": "User's skype number. Default value is empty string."
              },
              "phone": {
                "type": "string",
                "description": "User's phone number. Default value is empty string."
              },
              "_id": {
                "type": "string",
                "description": "User's id in database."
              },
              "createdAt": {
                "type": "string",
                "description": "Date of creating new user"
              },
              "updatedAt": {
                "type": "string",
                "description": "Date of updating user"
              }
            }
          },
          "token": {
            "type": "string",
            "description": "User's token"
          }
        },
        "example": {
          "message": "Success Signed In",
          "user": {
            "_id": "649edb80aa1270509e5ce7e9",
            "name": "Oleksandr",
            "email": "todafa8464@dronetz.com",
            "password": "$2b$10$onba/VGbS1lSoojpQODI9uI0XHjqWAAW4OAQXtVexK0V5u8tnJkjO",
            "avatarURL": "https://avataaars.io/?accessoriesType=Bla ...",
            "verify": true,
            "verificationToken": null,
            "birthday": "",
            "skype": "",
            "phone": "",
            "createdAt": "2023-06-30T13:41:20.176Z",
            "updatedAt": "2023-06-30T13:41:38.678Z"
          },
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OWVkYjgwYWExMjcwNTA5ZTVjZTdlOSIsImlhdCI6MTY4ODEzMjUzNSwiZXhwIjoxNjg4MjE4OTM1fQ.iel1IUceEFWfizYVXE5Xfb0F4cVcDvdq0cW83KXlBIQ"
        }
      },
      "UpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password"
          },
          "skype": {
            "type": "string",
            "description": "User's skype"
          },
          "phone": {
            "type": "string",
            "description": "User's phone number"
          },
          "avatar": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "UpdateResponse200": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Success changed"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "user's name"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "password": {
                "type": "string",
                "description": "User's hashed password"
              },
              "token": {
                "type": "string",
                "description": "User's token"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar URL"
              },
              "verify": {
                "type": "boolean",
                "description": "Verifying flag. Change to true after email verification",
                "example": true
              },
              "verificationToken": {
                "type": "string",
                "description": "Verification token"
              },
              "birthday": {
                "type": "string",
                "description": "User's date of birth. Default value is empty string."
              },
              "skype": {
                "type": "string",
                "description": "User's skype number. Default value is empty string."
              },
              "phone": {
                "type": "string",
                "description": "User's phone number. Default value is empty string."
              },
              "_id": {
                "type": "string",
                "description": "User's id in database."
              },
              "createdAt": {
                "type": "string",
                "description": "Date of creating new user"
              },
              "updatedAt": {
                "type": "string",
                "description": "Date of updating user"
              }
            }
          }
        },
        "example": {
          "message": "Success Signed In",
          "user": {
            "_id": "649edb80aa1270509e5ce7e9",
            "name": "Oleksandr",
            "email": "todafa8464@dronetz.com",
            "password": "$2b$10$onba/VGbS1lSoojpQODI9uI0XHjqWAAW4OAQXtVexK0V5u8tnJkjO",
            "avatarURL": "https://avataaars.io/?accessoriesType=Blank&avatarStyle ...",
            "verify": true,
            "verificationToken": null,
            "birthday": "",
            "skype": "",
            "phone": "",
            "createdAt": "2023-06-30T13:41:20.176Z",
            "updatedAt": "2023-06-30T13:41:38.678Z"
          },
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OWVkYjgwYWExMjcwNTA5ZTVjZTdlOSIsImlhdCI6MTY4ODEzMjUzNSwiZXhwIjoxNjg4MjE4OTM1fQ.iel1IUceEFWfizYVXE5Xfb0F4cVcDvdq0cW83KXlBIQ"
        }
      },
      "AddTaskRequest": {
        "type": "object",
        "required": ["title", "start", "end", "priority", "date", "category"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Task title. Max 250 signs"
          },
          "start": {
            "type": "string",
            "description": "Task start time"
          },
          "end": {
            "type": "string",
            "description": "Task end time"
          },
          "priority": {
            "type": "string",
            "description": "Task priority ('low', 'medium' or 'high')"
          },
          "date": {
            "type": "string",
            "description": "Date in format YYYY-MM-DD"
          },
          "category": {
            "type": "string",
            "description": "Task category ('todo', 'in-progress' or 'done')"
          }
        },
        "example": {
          "title": "task one",
          "start": "09:00",
          "end": "09:30",
          "priority": "high",
          "date": "2023-07-02",
          "category": "done"
        }
      },
      "AddTaskResponce200": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Task title. Max 250 signs"
          },
          "start": {
            "type": "string",
            "description": "Task start time"
          },
          "end": {
            "type": "string",
            "description": "Task end time"
          },
          "priority": {
            "type": "string",
            "description": "Task priority ('low', 'medium' or 'high')"
          },
          "date": {
            "type": "string",
            "description": "Date in format YYYY-MM-DD"
          },
          "category": {
            "type": "string",
            "description": "Task category ('todo', 'in-progress' or 'done')"
          },
          "owner": {
            "type": "string",
            "description": "Owner's user id"
          },
          "_id": {
            "type": "string",
            "description": "Task id"
          },
          "createdAt": {
            "type": "string",
            "description": "Date of creating task"
          },
          "updatedAt": {
            "type": "string",
            "description": "Date of updating task"
          }
        },
        "example": {
          "title": "task one",
          "start": "09:00",
          "end": "09:30",
          "priority": "high",
          "date": "2023-07-02",
          "category": "done",
          "owner": "649edb80aa1270509e5ce7e9",
          "_id": "649fdbff1360fabb914acfe8",
          "createdAt": "2023-07-01T07:55:43.895Z",
          "updatedAt": "2023-07-01T07:55:43.895Z"
        }
      },
      "AddTaskResponce400": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Title field must be a string"
          }
        },
        "example": [
          {
            "message": "Missing required start field"
          },
          {
            "message": "End field must be a string"
          },
          {
            "message": "Date field should be in format \"YYYY-MM-DD\""
          },
          {
            "message": "Nonexistent date"
          }
        ]
      },
      "GetTasks200": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Task id"
            },
            "title": {
              "type": "string",
              "description": "Task title. Max 250 signs"
            },
            "start": {
              "type": "string",
              "description": "Task start time"
            },
            "end": {
              "type": "string",
              "description": "Task end time"
            },
            "priority": {
              "type": "string",
              "description": "Task priority ('low', 'medium' or 'high')"
            },
            "date": {
              "type": "string",
              "description": "Date in format YYYY-MM-DD"
            },
            "category": {
              "type": "string",
              "description": "Task category ('todo', 'in-progress' or 'done')"
            },
            "owner": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Owner's id"
                },
                "name": {
                  "type": "string",
                  "description": "Owner's name"
                }
              }
            }
          },
          "example": {
            "_id": "649fff118cdd7319e68ab0d7",
            "title": "write auth documentation",
            "start": "09:00",
            "end": "12:30",
            "priority": "high",
            "date": "2023-07-01",
            "category": "todo",
            "owner": {
              "_id": "649edb80aa1270509e5ce7e9",
              "name": "Oleksandr"
            }
          }
        },
        "example": [
          {
            "_id": "649fff118cdd7319e68ab0d7",
            "title": "write auth documentation",
            "start": "09:00",
            "end": "12:30",
            "priority": "high",
            "date": "2023-07-01",
            "category": "todo",
            "owner": {
              "_id": "649edb80aa1270509e5ce7e9",
              "name": "Oleksandr"
            }
          },
          {
            "_id": "649fff2a8cdd7319e68ab0da",
            "title": "write tasks documentation",
            "start": "13:00",
            "end": "16:30",
            "priority": "high",
            "date": "2023-07-01",
            "category": "todo",
            "owner": {
              "_id": "649edb80aa1270509e5ce7e9",
              "name": "Oleksandr"
            }
          }
        ]
      },
      "GetTaskForDay400": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response"
          }
        },
        "example": [
          {
            "message": "Nonexistent date"
          },
          {
            "message": "Date field should be in format \"YYYY-MM-DD\""
          }
        ]
      },
      "GetTaskbyId200": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Task id"
          },
          "title": {
            "type": "string",
            "description": "Task title. Max 250 signs"
          },
          "start": {
            "type": "string",
            "description": "Task start time"
          },
          "end": {
            "type": "string",
            "description": "Task end time"
          },
          "priority": {
            "type": "string",
            "description": "Task priority ('low', 'medium' or 'high')"
          },
          "date": {
            "type": "string",
            "description": "Date in format YYYY-MM-DD"
          },
          "category": {
            "type": "string",
            "description": "Task category ('todo', 'in-progress' or 'done')"
          },
          "owner": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Owner's id"
              },
              "name": {
                "type": "string",
                "description": "Owner's name"
              }
            }
          }
        },
        "example": {
          "_id": "649ffc9b9007639074f63cee",
          "title": "task one",
          "start": "09:00",
          "end": "09:30",
          "priority": "high",
          "date": "2023-02-28",
          "category": "done",
          "owner": {
            "_id": "649edb80aa1270509e5ce7e9",
            "name": "Oleksandr"
          }
        }
      },
      "TaskbyId400": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message"
          }
        },
        "example": {
          "message": "649ffc9b9007639074f63 is not valid id"
        }
      },
      "NotFound404": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message"
          }
        },
        "example": {
          "message": "Task id: 649ffc9b9007639074f63 not found"
        }
      },
      "DeleteTaskbyId200": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message"
          },
          "task": {
            "type": "object",

            "properties": {
              "_id": {
                "type": "string",
                "description": "Task id"
              },
              "title": {
                "type": "string",
                "description": "Task title. Max 250 signs"
              },
              "start": {
                "type": "string",
                "description": "Task start time"
              },
              "end": {
                "type": "string",
                "description": "Task end time"
              },
              "priority": {
                "type": "string",
                "description": "Task priority ('low', 'medium' or 'high')"
              },
              "date": {
                "type": "string",
                "description": "Date in format YYYY-MM-DD"
              },
              "category": {
                "type": "string",
                "description": "Task category ('todo', 'in-progress' or 'done')"
              },
              "owner": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Owner's id"
                  },
                  "name": {
                    "type": "string",
                    "description": "Owner's name"
                  }
                }
              },
              "createdAt": {
                "type": "string",
                "description": "Date of creating task"
              },
              "updatedAt": {
                "type": "string",
                "description": "Date of updating task"
              }
            }
          }
        },
        "example": {
          "message": "Task deleted",
          "deletedTask": {
            "_id": "649fdb051360fabb914acfe2",
            "title": "task one",
            "start": "09:00",
            "end": "09:30",
            "priority": "high",
            "date": "2023-06-06",
            "category": "done",
            "owner": {
              "_id": "649edb80aa1270509e5ce7e9",
              "name": "Oleksandr"
            },
            "createdAt": "2023-07-01T07:51:33.853Z",
            "updatedAt": "2023-07-01T07:51:33.853Z"
          }
        }
      },
      "UpdateTaskbyId200": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message"
          },
          "task": {
            "type": "object",

            "properties": {
              "_id": {
                "type": "string",
                "description": "Task id"
              },
              "title": {
                "type": "string",
                "description": "Task title. Max 250 signs"
              },
              "start": {
                "type": "string",
                "description": "Task start time"
              },
              "end": {
                "type": "string",
                "description": "Task end time"
              },
              "priority": {
                "type": "string",
                "description": "Task priority ('low', 'medium' or 'high')"
              },
              "date": {
                "type": "string",
                "description": "Date in format YYYY-MM-DD"
              },
              "category": {
                "type": "string",
                "description": "Task category ('todo', 'in-progress' or 'done')"
              },
              "owner": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Owner's id"
                  },
                  "name": {
                    "type": "string",
                    "description": "Owner's name"
                  }
                }
              },
              "createdAt": {
                "type": "string",
                "description": "Date of creating task"
              },
              "updatedAt": {
                "type": "string",
                "description": "Date of updating task"
              }
            }
          }
        },
        "example": {
          "message": "Task updated",
          "task": {
            "_id": "649fdb071360fabb914acfe5",
            "title": "write tasks documentation",
            "start": "13:00",
            "end": "16:30",
            "priority": "high",
            "date": "2023-07-01",
            "category": "todo",
            "owner": {
              "_id": "649edb80aa1270509e5ce7e9",
              "name": "Oleksandr"
            },
            "createdAt": "2023-07-01T07:51:35.532Z",
            "updatedAt": "2023-07-01T14:10:56.085Z"
          }
        }
      },
      "GetReviews200": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Task id"
            },
            "name": {
              "type": "string",
              "description": "Review owner's name"
            },
            "comment": {
              "type": "comment",
              "description": "Content"
            },
            "rating": {
              "type": "number",
              "description": "Review rating"
            },
            "owner": { "type": "string", "description": "Owner's id" },
            "avatarURL": { "type": "string", "description": "Owner's avatar URL" }
          }
        },
        "example": [
          {
            "_id": "64941248556ca8e6574c00aa",
            "name": "Kateryna Hilcher",
            "comment": "Really helps to plan the day and visualize tasks. Exactly what I was looking for. Huge thanks to the developers! ",
            "rating": 4,
            "owner": "64941248556ca8e6574c00ab",
            "avatarURL": "http://res.cloudinary.com/dotk2lk3j/image/upload/v1688139484/649edb80aa12 ..."
          },
          {
            "_id": "64941248556ca8e6574c00ab",
            "name": "Mykola Kapytaniuk",
            "comment": "Very cool app, everything is clear and functional. A great program for time chronology.",
            "rating": 1,
            "owner": "64941248556ca8e6574c00ab",
            "avatarURL": "http://res.cloudinary.com/dotk2lk3j/image/upload/v1688139484/649edb80aa12 ..."
          },
          {
            "_id": "64941248556ca8e6574c00ac",
            "name": "Ihor Dronenko",
            "comment": "Really helps to increase productivity. The application has a clear interface and useful features. I like it at the initial stage. ",
            "rating": 3,
            "owner": "64941248556ca8e6574c00ab",
            "avatarURL": "http://res.cloudinary.com/dotk2lk3j/image/upload/v1688139484/649edb80aa12 ..."
          },
          {
            "_id": "64941248556ca8e6574c00ad",
            "name": "Volodymyr Shvets",
            "comment": "A good, visual time planning program.",
            "rating": 5,
            "owner": "64941248556ca8e6574c00ab",
            "avatarURL": "http://res.cloudinary.com/dotk2lk3j/image/upload/v1688139484/649edb80aa12 ..."
          }
        ]
      },
      "AddUpdateReviewRequest": {
        "type": "object",
        "required": ["name", "comment", "rating"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Review owner's name"
          },
          "comment": {
            "type": "comment",
            "description": "Content"
          },
          "rating": {
            "type": "number",
            "description": "Review rating"
          }
        },
        "example": {
          "name": "John Dou",
          "comment": "It's a wonderfull app.",
          "rating": 5
        }
      },
      "AddUpdateReview200": {
        "type": "object",
        "required": ["name", "comment", "rating"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Review owner's name"
          },
          "comment": {
            "type": "comment",
            "description": "Content"
          },
          "rating": {
            "type": "number",
            "description": "Review rating"
          },
          "owner": {
            "type": "string",
            "description": "Owner's id"
          },
          "_id": {
            "type": "string",
            "description": "Task id"
          },
          "createdAt": {
            "type": "string",
            "description": "Date of creating review"
          },
          "updatedAt": {
            "type": "string",
            "description": "Date of updating review"
          }
        },
        "example": {
          "name": "John Dou",
          "comment": "It's a wonderfull app.",
          "rating": 5,
          "owner": "649edb80aa1270509e5ce7e9",
          "_id": "64a057d151366ec9819ae2b2",
          "createdAt": "2023-07-01T16:44:01.827Z",
          "updatedAt": "2023-07-01T16:44:01.827Z"
        }
      },
      "AddReview409": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message"
          }
        },
        "example": {
          "message": "The review exists"
        }
      },
      "AddUpdateReview400": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message"
          }
        },
        "example": [
          {
            "message": "\"rating\" is required"
          },
          {
            "message": "Comment field should be a string"
          }
        ]
      },
      "DeleteReview200": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message"
          }
        },
        "example": {
          "message": "Reviews deleted"
        }
      },
      "Reviews404": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response"
          }
        },
        "example": {
          "message": "Reviews not found"
        }
      },
      "Statistics200": {
        "type": "object",
        "properties": {
          "todo": {
            "type": "object",
            "description": "values for todo tasks",
            "properties": {
              "forDays": {
                "type": "object",
                "properties": {
                  "percents": {
                    "type": "number",
                    "descritption": "todo tasks for days in percents"
                  },
                  "quantity": {
                    "type": "number",
                    "descritption": "todo tasks for days in points"
                  }
                }
              },
              "forMonth": {
                "type": "object",
                "properties": {
                  "percents": {
                    "type": "number",
                    "descritption": "todo tasks for month in percents"
                  },
                  "quantity": {
                    "type": "number",
                    "descritption": "todo tasks for month in points"
                  }
                }
              }
            }
          },
          "inProgres": {
            "type": "object",
            "description": "values for in-progress tasks",
            "properties": {
              "forDays": {
                "type": "object",
                "properties": {
                  "percents": {
                    "type": "number",
                    "descritption": "in-progress tasks for days in percents"
                  },
                  "quantity": {
                    "type": "number",
                    "descritption": "in-progress tasks for days in points"
                  }
                }
              },
              "forMonth": {
                "type": "object",
                "properties": {
                  "percents": {
                    "type": "number",
                    "descritption": "in-progress tasks for month in percents"
                  },
                  "quantity": {
                    "type": "number",
                    "descritption": "in-progress tasks for month in points"
                  }
                }
              }
            }
          },
          "done": {
            "type": "object",
            "description": "values for done tasks",
            "properties": {
              "forDays": {
                "type": "object",
                "properties": {
                  "percents": {
                    "type": "number",
                    "descritption": "done tasks for days in percents"
                  },
                  "quantity": {
                    "type": "number",
                    "descritption": "done tasks for days in points"
                  }
                }
              },
              "forMonth": {
                "type": "object",
                "properties": {
                  "percents": {
                    "type": "number",
                    "descritption": "done tasks for month in percents"
                  },
                  "quantity": {
                    "type": "number",
                    "descritption": "done tasks for month in points"
                  }
                }
              }
            }
          }
        }
      },
      "Statistics400": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response"
          }
        },
        "example": [
          {
            "message": "Date should be in format YYYY-MM-DD"
          },
          {
            "message": "Nonexistent date"
          }
        ]
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
